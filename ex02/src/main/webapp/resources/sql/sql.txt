create sequence seq_board nocache;

create table tbl_board (
bno number(10,0),
title varchar2(200) not null,
content varchar2(2000) not null,
writer varchar2(50) not null,
regdate date default sysdate, 
updatedate date default sysdate
);

alter table tbl_board add constraint pk_board primary key(bno);

insert into tbl_board (bno, title, content, writer) 
values(seq_board.nextval, '테스트 제목','테스트 내용','user1000');

commit;


--댓글용 테이블
CREATE TABLE TBL_REPLY(
rno number(10,0) not null,  --pk
bno number(10,0) not null, --FK
reply varchar2(1000) not null,
replyer varchar2(50) not null,
replyDate date default sysdate,
updatedate date default sysdate
);

--댓글 테이블용 시퀀스
create sequence seq_reply nocache;

--TBL_REPLY에 PK 지정
alter table tbl_reply add constraint pk_reply primary key (rno);

--TBL_REPLY에 외래키(FK) 지정
alter table tbl_reply add constraint fk_reply_board foreign key (bno) references tbl_board (bno);

commit;

--댓글 처리를 위한 인덱스 생성(처리 속도 개선)
Create index idx_reply on tbl_reply (bno desc,rno asc) ;

--transaction
Create table tbl_sample1(col1 varchar2(500));

Create table tbl_sample2(col2 varchar2(50)); ---test를 위해 일부러 적게함

--댓글 개수 처리
alter table tbl_board add (replycnt number default 0);

--댓글 개수 초기화 처리
update tbl_board set replycnt = (select count(rno) from tbl_reply where tbl_reply.bno = tbl_board.bno);
commit;

--파일첨부 테이블
create table tbl_attach(
uuid varchar2(100) not null,
uploadPath varchar2(200) not null,
fileName varchar2(100) not null,
filetype char(1) default 'I',
bno number(10,0)
);
--tbl_attach pk만들기
alter table tbl_attach add constraint pk_attach primary key (uuid);

--tbl_attach fk만들기
alter table tbl_attach add constraint fk_board_attach foreign key (bno) references tbl_board(bno);


--security jdbc사용시 security 지정 기본 테이블

create table users (
username varchar2(50) not null primary key,
password varchar2(50) not null,
enabled char(1) default '1');

--권한 테이블 users와 1:N
create table authorities (
username varchar2(50) not null,
authority varchar2(50) not null,
constraint fk_authorities_users foreign key(username) references users(username));

--1:N 관계시 인덱스 처리로 성능 개선
--username,authority를 조합한 값이 유일한 것만 인덱스로 만듦
create unique index ix_auth_username on authorities (username,authority);

--실습용 더미 데이터 생성
insert into users (username,password) values ('user00','pw00');
insert into users (username,password) values ('member00','pw00');
insert into users (username,password) values ('admin00','pw00');

insert into authorities (username, authority) values ('user00','ROLE_USER');
insert into authorities (username, authority) values ('member00','ROLE_MANAGER');
insert into authorities (username, authority) values ('admin00','ROLE_MANAGER');
insert into authorities (username, authority) values ('admin00','ROLE_ADMIN');

commit;